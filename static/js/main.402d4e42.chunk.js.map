{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","search","setSearch","newMovie","setNewMovie","isMovieFound","setIsMovieFound","hasError","setHasError","isLoading","setLoading","searchForAMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","foundedMovie","movieToPreview","Title","Plot","Poster","imdbID","htmlFor","value","type","id","placeholder","onChange","target","classNames","disabled","length","onClick","App","setMovies","some","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.402d4e42.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [search, setSearch] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isMovieFound, setIsMovieFound] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const searchForAMovie = async (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const foundedMovie = await getMovie(search);\n\n    if ('Title' in foundedMovie) {\n      const movieToPreview = {\n        title: foundedMovie.Title,\n        description: foundedMovie.Plot,\n        imgUrl: foundedMovie.Poster !== 'N/A' ? foundedMovie.Poster\n          : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n        imdbUrl: `https://www.imdb.com/title/${foundedMovie.imdbID}`,\n        imdbId: foundedMovie.imdbID,\n      };\n\n      setNewMovie(movieToPreview);\n      setIsMovieFound(true);\n    } else {\n      setHasError(true);\n    }\n\n    setLoading(false);\n  };\n\n  const handleAddMovie = () => {\n    if (newMovie !== null) {\n      addMovie(newMovie);\n      setHasError(false);\n      setNewMovie(null);\n      setSearch('');\n      setIsMovieFound(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              value={search}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              onChange={(event) => {\n                setSearch(event.target.value);\n                setHasError(false);\n              }}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={search.length === 0}\n              onClick={searchForAMovie}\n            >\n              {hasError ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {isMovieFound && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=5d10842a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovies = (movie: Movie) => {\n    if (!movies.some(film => film.imdbId === movie.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}